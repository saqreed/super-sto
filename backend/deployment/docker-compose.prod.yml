version: "3.8"

services:
  # Backend приложение
  supersto-backend:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: supersto-backend
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - MONGO_URI=mongodb://supersto-mongo:27017/supersto_db
      - MONGO_USERNAME=supersto_user
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=86400
      - CORS_ALLOWED_ORIGINS=${FRONTEND_URL}
      - SERVER_PORT=8080
    ports:
      - "8080:8080"
    depends_on:
      - supersto-mongo
    networks:
      - supersto-network
    restart: unless-stopped
    volumes:
      - supersto-logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB база данных
  supersto-mongo:
    image: mongo:7.0
    container_name: supersto-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=supersto_db
    ports:
      - "27017:27017"
    volumes:
      - supersto-mongo-data:/data/db
      - supersto-mongo-config:/data/configdb
      - ../docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - supersto-network
    restart: unless-stopped
    command: mongod --auth

  # Nginx для проксирования и статики
  supersto-nginx:
    image: nginx:alpine
    container_name: supersto-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - supersto-logs:/var/log/nginx
    depends_on:
      - supersto-backend
    networks:
      - supersto-network
    restart: unless-stopped

  # Monitoring с Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: supersto-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - supersto-network
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"

  # Grafana для визуализации метрик
  grafana:
    image: grafana/grafana:latest
    container_name: supersto-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
    networks:
      - supersto-network
    restart: unless-stopped

volumes:
  supersto-mongo-data:
    driver: local
  supersto-mongo-config:
    driver: local
  supersto-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  supersto-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
