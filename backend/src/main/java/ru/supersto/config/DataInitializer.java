package ru.supersto.config;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.boot.CommandLineRunner;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;
import ru.supersto.entity.*;
import ru.supersto.repository.*;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

@Component
@RequiredArgsConstructor
@Slf4j
public class DataInitializer implements CommandLineRunner {

    private final UserRepository userRepository;
    private final ServiceRepository serviceRepository;
    private final ServiceStationRepository serviceStationRepository;
    private final PasswordEncoder passwordEncoder;

    @Override
    public void run(String... args) throws Exception {
        log.info("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...");

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –¥–∞–Ω–Ω—ã–µ
        if (userRepository.count() > 0) {
            log.info("‚úÖ –î–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é");
            return;
        }

        createUsers();
        createServiceStations();
        createServices();

        log.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!");
    }

    private void createUsers() {
        log.info("üë• –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...");

        // –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        User admin = new User();
        admin.setEmail("admin@supersto.ru");
        admin.setPassword(passwordEncoder.encode("admin123"));
        admin.setFirstName("–ê–¥–º–∏–Ω");
        admin.setLastName("–°—É–ø–µ—Ä –°–¢–û");
        admin.setPhone("+7 (999) 000-01-01");
        admin.setRole(UserRole.ADMIN);
        admin.setLoyaltyLevel(LoyaltyLevel.PLATINUM);
        admin.setLoyaltyPoints(5000);
        admin.setCreatedAt(LocalDateTime.now());
        userRepository.save(admin);

        // –ú–∞—Å—Ç–µ—Ä
        User master = new User();
        master.setEmail("master@supersto.ru");
        master.setPassword(passwordEncoder.encode("master123"));
        master.setFirstName("–ò–≤–∞–Ω");
        master.setLastName("–ú–∞—Å—Ç–µ—Ä–æ–≤");
        master.setPhone("+7 (999) 000-02-02");
        master.setRole(UserRole.MASTER);
        master.setLoyaltyLevel(LoyaltyLevel.GOLD);
        master.setLoyaltyPoints(1500);
        master.setCreatedAt(LocalDateTime.now());
        userRepository.save(master);

        // –ö–ª–∏–µ–Ω—Ç 1
        User client1 = new User();
        client1.setEmail("client@supersto.ru");
        client1.setPassword(passwordEncoder.encode("client123"));
        client1.setFirstName("–ü–µ—Ç—Ä");
        client1.setLastName("–ö–ª–∏–µ–Ω—Ç–æ–≤");
        client1.setPhone("+7 (999) 000-03-03");
        client1.setRole(UserRole.CLIENT);
        client1.setLoyaltyLevel(LoyaltyLevel.SILVER);
        client1.setLoyaltyPoints(250);
        client1.setCreatedAt(LocalDateTime.now());
        userRepository.save(client1);

        // –ö–ª–∏–µ–Ω—Ç 2 (—Ç–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø—ã—Ç–∞–ª—Å—è –∑–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è)
        User client2 = new User();
        client2.setEmail("Redaer05@yandex.ru");
        client2.setPassword(passwordEncoder.encode("password123"));
        client2.setFirstName("–ê–ª–µ–∫—Å–∞–Ω–¥—Ä");
        client2.setLastName("–†–∏–¥–µ—Ä");
        client2.setPhone("+7 (999) 000-04-04");
        client2.setRole(UserRole.CLIENT);
        client2.setLoyaltyLevel(LoyaltyLevel.BRONZE);
        client2.setLoyaltyPoints(50);
        client2.setCreatedAt(LocalDateTime.now());
        userRepository.save(client2);

        log.info("‚úÖ –°–æ–∑–¥–∞–Ω–æ {} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", userRepository.count());
    }

    private void createServiceStations() {
        log.info("üè¢ –°–æ–∑–¥–∞–Ω–∏–µ –°–¢–û...");

        ServiceStation station1 = new ServiceStation();
        station1.setName("–°—É–ø–µ—Ä–°–¢–û –¶–µ–Ω—Ç—Ä");
        station1.setAddress("–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è, –¥. 1");
        station1.setPhone("+7 (495) 000-01-01");
        station1.setEmail("center@supersto.ru");
        station1.setDescription("–û—Å–Ω–æ–≤–Ω–æ–π —Ü–µ–Ω—Ç—Ä –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π");

        WorkingHours hours1 = new WorkingHours();
        hours1.setStart("08:00");
        hours1.setEnd("20:00");
        station1.setWorkingHours(hours1);

        station1.setCreatedAt(LocalDateTime.now());
        station1.setUpdatedAt(LocalDateTime.now());
        serviceStationRepository.save(station1);

        ServiceStation station2 = new ServiceStation();
        station2.setName("–°—É–ø–µ—Ä–°–¢–û –°–µ–≤–µ—Ä");
        station2.setAddress("–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –°–µ–≤–µ—Ä–Ω–∞—è, –¥. 15");
        station2.setPhone("+7 (495) 000-02-02");
        station2.setEmail("north@supersto.ru");
        station2.setDescription("–°–µ–≤–µ—Ä–Ω—ã–π —Ñ–∏–ª–∏–∞–ª —Å–µ—Ç–∏ –°—É–ø–µ—Ä–°–¢–û");

        WorkingHours hours2 = new WorkingHours();
        hours2.setStart("09:00");
        hours2.setEnd("21:00");
        station2.setWorkingHours(hours2);

        station2.setCreatedAt(LocalDateTime.now());
        station2.setUpdatedAt(LocalDateTime.now());
        serviceStationRepository.save(station2);

        log.info("‚úÖ –°–æ–∑–¥–∞–Ω–æ {} –°–¢–û", serviceStationRepository.count());
    }

    private void createServices() {
        log.info("üîß –°–æ–∑–¥–∞–Ω–∏–µ —É—Å–ª—É–≥...");

        List<Service> services = Arrays.asList(
                createService("–ó–∞–º–µ–Ω–∞ –º–∞—Å–ª–∞", "–ó–∞–º–µ–Ω–∞ –º–æ—Ç–æ—Ä–Ω–æ–≥–æ –º–∞—Å–ª–∞ –∏ –º–∞—Å–ª—è–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞", 60,
                        new BigDecimal("2500.0")),
                createService("–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è", "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç—ã –¥–≤–∏–≥–∞—Ç–µ–ª—è", 90,
                        new BigDecimal("3500.0")),
                createService("–ó–∞–º–µ–Ω–∞ —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –∫–æ–ª–æ–¥–æ–∫", "–ó–∞–º–µ–Ω–∞ –ø–µ—Ä–µ–¥–Ω–∏—Ö –∏–ª–∏ –∑–∞–¥–Ω–∏—Ö —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –∫–æ–ª–æ–¥–æ–∫", 120,
                        new BigDecimal("4500.0")),
                createService("–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂", "–°–Ω—è—Ç–∏–µ/—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–ª–µ—Å, –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∫–∞", 45, new BigDecimal("1500.0")),
                createService("–ó–∞–º–µ–Ω–∞ —Å–≤–µ—á–µ–π –∑–∞–∂–∏–≥–∞–Ω–∏—è", "–ó–∞–º–µ–Ω–∞ –∫–æ–º–ø–ª–µ–∫—Ç–∞ —Å–≤–µ—á–µ–π –∑–∞–∂–∏–≥–∞–Ω–∏—è", 30,
                        new BigDecimal("2000.0")),
                createService("–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —Ä–∞–∑–≤–∞–ª-—Å—Ö–æ–∂–¥–µ–Ω–∏—è", "–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —É–≥–ª–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–ª–µ—Å", 90,
                        new BigDecimal("3000.0")),
                createService("–ó–∞–º–µ–Ω–∞ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞", "–ó–∞–º–µ–Ω–∞ –≤–æ–∑–¥—É—à–Ω–æ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞ –¥–≤–∏–≥–∞—Ç–µ–ª—è", 15,
                        new BigDecimal("800.0")),
                createService("–ú–æ–π–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è", "–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –º–æ–π–∫–∞ –∫—É–∑–æ–≤–∞ –∏ —Å–∞–ª–æ–Ω–∞", 60, new BigDecimal("1200.0")));

        serviceRepository.saveAll(services);
        log.info("‚úÖ –°–æ–∑–¥–∞–Ω–æ {} —É—Å–ª—É–≥", serviceRepository.count());
    }

    private Service createService(String name, String description, int duration, BigDecimal price) {
        Service service = new Service();
        service.setName(name);
        service.setDescription(description);
        service.setDuration(duration);
        service.setPrice(price);
        service.setCreatedAt(LocalDateTime.now());
        return service;
    }
}