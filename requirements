Техническое задание (ТЗ) на разработку фронтенд-макета сервиса СТО
Проект: "СуперСТО" — цифровой сервис для комплексного обслуживания автомобилей с расширенным функционалом.

1. Введение
Цель:
Создать современный фронтенд-макет сервиса СТО, обеспечивающий удобный интерфейс для клиентов, сотрудников и администраторов.

Задачи:

Реализовать регистрацию/авторизацию с разными ролями.
Организовать онлайн-запись на обслуживание.
Внедрить функцию заказа запчастей с каталогом и корзиной.
Обеспечить управление заявками и уведомлениями.
Сделать интерфейс адаптивным и доступным.
2. Роли пользователей
Клиент
- Регистрация/вход <br> - Запись на обслуживание <br> - Заказ запчастей <br> - Просмотр истории заявок <br> - Получение уведомлений
Мастер
- Просмотр заявок <br> - Обновление статусов заявок <br> - Работа с деталями <br> - Отправка отчетов
Администратор
- Управление пользователями <br> - Настройка услуг и цен <br> - Статистика и отчеты <br> - Модерация заказов

3. Функциональные модули
Регистрация/Авторизация
Формы регистрации с выбором роли.
Вход через соцсети (Google, Telegram).
Восстановление пароля.
Личный кабинет клиента
Профиль: данные, история заявок, заказанные детали.
Онлайн-запись: выбор СТО, услуги, даты и времени.
Корзина: добавление деталей, оформление заказа.
Уведомления: статус заявок, подтверждения, напоминания.
Онлайн-запись на обслуживание
Фильтр СТО по локации (интеграция с картами).
Выбор услуги из каталога (диагностика, замена масла и т.д.).
Подтверждение записи с возможностью отмены.
Каталог деталей
Поиск и фильтрация по марке, модели, артикулу.
Деталировка с фото, описанием и ценой.
Возможность заказа с доставкой или самовывозом.
Панель мастера
Список активных заявок с фильтрацией по статусу.
Обновление статуса заявки (ожидание, в работе, завершено).
Привязка деталей к заявке.
Формирование отчета с фото/видео до/после ремонта.
Панель администратора
Управление пользователями (блокировка, роли).
Настройка услуг, цен и времени работы.
Статистика: загруженность СТО, популярные услуги.
Уведомления
Push-уведомления и email/SMS-рассылки.
История уведомлений в профиле.
4. Технологии
React (18 версия) с TypeScript.
Tailwind CSS (v3.4.13) для стилизации.
Redux Toolkit для управления состоянием.
React Router v6 для навигации.
Axios для API-запросов.
Formik + Yup для валидации форм.
Headless UI для кастомных компонентов.
Figma для дизайна макета.
5. Дизайн
Адаптивность: поддержка мобильных, планшетов и десктопов.
Цветовая палитра:
Основной цвет: #1A56DB (синий).
Темная/светлая темы.
Типография: Google Fonts (Roboto, Inter).
Иконки: Heroicons или Font Awesome.
UI-компоненты: кастомные кнопки, карточки, таблицы, модальные окна.
6. Интеграции
Карты: интеграция с Yandex Maps или Google Maps API.
Оплата: тестовый платежный шлюз (Stripe, Tinkoff).
Уведомления: Firebase Cloud Messaging или EmailJS.
7. Тестирование
Unit-тесты: Jest, React Testing Library.
E2E-тесты: Cypress.
Кросс-браузерность: проверка в Chrome, Firefox, Safari, Edge.
Адаптивность: тестирование на устройствах с разными разрешениями.
8. Этапы разработки
Исследование и проектирование (1 неделя):
Создание прототипов в Figma.
Декомпозиция функционала.
Разработка (3 недели):
Верстка главной страницы, авторизации, профиля.
Реализация модулей: запись, заказ деталей, панели мастера/админа.
Тестирование и доработка (1 неделя):
Исправление багов.
Адаптация под мобильные устройства.
Сдача проекта (0.5 недели):
Демонстрация макета.
Передача исходного кода и документации.
9. Дополнительные требования
Производительность: оптимизация загрузки страниц (min ≤ 2 сек).
SEO: метатеги, структурированные данные для поисковых систем.
Безопасность: валидация данных на клиенте, защита от XSS.
10. Примеры страниц
Главная: слайдер акций, каталог услуг, карта СТО.
Личный кабинет клиента: история заявок, активные заказы, уведомления.
Форма записи: выбор СТО → выбор услуги → выбор времени.
Панель мастера: таблица заявок с фильтрами и действиями.
Панель администратора: диаграммы загруженности СТО, управление услугами.
11. Примечания
Макет будет статическим (без реализации backend).
Для демонстрации можно использовать Storybook или отдельные страницы.
Приоритет: интуитивность интерфейса и скорость работы.